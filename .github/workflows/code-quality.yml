name: Qodana
on:
  workflow_dispatch:
  pull_request:
  push:
jobs:
  qodana-python-unclean:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: 'Use qodana-python config'
        run: cp qodana_config/python.yaml qodana.yaml

      - name: 'Qodana Python Unclean Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: |
            --source-directory,sample_unclean/,
          artifact-name: qodana-python-unclean
          pr-mode: false
    
  qodana-python-clean:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: 'Use qodana-python config'
        run: cp qodana_config/python.yaml qodana.yaml

      - name: 'Qodana Python Clean Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: |
            --source-directory,sample_clean/,
          artifact-name: qodana-python-clean
          pr-mode: false

  qodana-js-unclean:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: 'Use qodana-js config'
        run: cp qodana_config/js.yaml qodana.yaml

      - name: 'Qodana JS Unclean Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: |
            --source-directory,sample_unclean/,
          artifact-name: qodana-js-unclean
          pr-mode: false

  qodana-js-clean:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: 'Use qodana-js config'
        run: cp qodana_config/js.yaml qodana.yaml

      - name: 'Qodana JS Clean Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: |
            --source-directory,sample_clean/,
          artifact-name: qodana-js-clean
          pr-mode: false

  #qodana-jvm:
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: write
  #    pull-requests: write
  #    checks: write
  #  steps:
  #    - uses: actions/checkout@v4
  #      with:
  #        ref: ${{ github.event.pull_request.head.sha }}
  #        fetch-depth: 0
  #    - name: 'Use qodana-jvm config'
  #      run: cp qodana_config/jvm.yaml qodana.yaml
  #
  #    - name: 'Qodana JVM Scan'
  #      uses: JetBrains/qodana-action@v2023.2
  #      env:
  #        QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
  #      with:
  #        args: |
  #          --source-directory,test_cases/,
  #        artifact-name: qodana-jvm
  #        pr-mode: false

  #qodana-dotnet:
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: write
  #    pull-requests: write
  #    checks: write
  #  steps:
  #    - uses: actions/checkout@v4
  #      with:
  #        ref: ${{ github.event.pull_request.head.sha }}
  #        fetch-depth: 0
  #    - name: 'Use qodana-dotnet config'
  #      run: cp qodana_config/dotnet.yaml qodana.yaml
  #
  #    - name: 'Qodana .NET Scan'
  #      uses: JetBrains/qodana-action@v2023.2
  #      env:
  #        QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
  #      with:
  #        args: |
  #          --source-directory,test_cases/,
  #        artifact-name: qodana-dotnet
  #        pr-mode: false